1.

package queshi;

public class Validate {
public static boolean isEmail(String email){
String regex="\\w{1,}@(\\w{1,3}.){1,}\\w{1,}";
if(email.matches(regex)){
return true;
}
else {
return false;
}
}

public static boolean isPhone(String phone){
String regex="(0\\d{2,3}-?)?[1-9]\\d{7}";
if(phone.matches(regex)){
return true;
}
else {
return false;
}
}

public static boolean isID(String ID){
String regex="\\d{17}(\\d|[x])";
if(ID.matches(regex)){
return true;
}
else {
return false;
}
}

public static boolean isPostalCode(String PostalCode){
String regex="\\d{6})";
if(PostalCode.matches(regex)){
return true;
}
else {
return false;
}
}

public static boolean isbirth(String birth){
String regex="(([1][9])|([2][0]))\\d{2}(([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))";
if(birth.matches(regex)){
return true;
}
else {
return false;
}
}
}

package queshi;

import java.util.Scanner;


public class test {
public static void main(String[] args){
Scanner scan=new Scanner(System.in);
System.out.println("输入用户名");
String name=scan.nextLine();
System.out.println("输入密码");
String password=scan.nextLine();
System.out.println("输入正确的邮箱号码");
String email;
while(true){
email=scan.nextLine();
if(Validate.isEmail(email)){
System.out.println("格式正确");
break;
}
else{
System.out.println("格式不正确,请重新输入");
}
}

System.out.println("输入正确的电话号码");
String phone;
while(true){
phone=scan.nextLine();
if(Validate.isPhone(phone)){
System.out.println("格式正确");
break;
}
else{
System.out.println("格式不正确,请重新输入");
}
}
System.out.println("输入QQ");
String QQ=scan.nextLine();
System.out.println("输入身份证号码");
String ID;
while(true){
ID=scan.nextLine();
if(Validate.isID(ID)){
System.out.println("格式正确");
break;
}
else{
System.out.println("格式不正确,请重新输入");
}
}
System.out.println("输入邮政编码");
String PostalCode;
while(true){
PostalCode=scan.nextLine();
if(Validate.isPostalCode(PostalCode)){
System.out.println("格式正确");
break;
}
else{
System.out.println("格式不正确,请重新输入");
}
}

System.out.println("输入生日");
String birth;
while(true){
birth=scan.nextLine();
if(Validate.isbirth(birth)){
System.out.println("格式正确");
break;
}
else{
System.out.println("格式不正确,请重新输入");
}
}
}

}
==================================================
======================================================
2.
package queshi;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Math {
public static void main(String[] args){
String regex="[a-z]+\\(\\d+,\\d+\\)";
String str="add(5,max(10,sub(5,2)))";
while(true) {
Pattern p=Pattern.compile(regex);
Matcher m=p.matcher(str);
String s1 = null;
if(m.find()){
s1=m.group();
}
else break;
String regex1="[a-z]+";
String regex2="\\d+";
Pattern p1=Pattern.compile(regex1);
Matcher m1=p1.matcher(s1);
String operator="";
while(m1.find()){
operator=m1.group();
} 
Pattern p2=Pattern.compile(regex2);
Matcher m2=p2.matcher(s1);
String num[]= new String[2];
int i=0;
while(m2.find()){
num[i]=m2.group();
i++;
}
int num1,num2;
if(operator.equals("doubleMe")){

num1=Integer.parseInt(num[0]);
num2=0;
}
else {

num1=Integer.parseInt(num[0]);
num2=Integer.parseInt(num[1]);
}

int result=0;
switch(operator) {
case "add":result=num1+num2;break;
case "sub":result=num1-num2;break;
case "max":result=num1>num2?num1:num2;break;
case "min":result=num1<num2?num1:num2;break;
case "doubleMe":result=num1*2;break;
default:System.out.println("该运算暂不支持！");
}

String xresult=Integer.toString(result);
str=str.replace(s1,xresult);

}
System.out.println(str);
}
}

========================================================
========================================================

3.
package queshi;

import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Website {

public static void main(String[] args){
String web="<html><head><title>欢迎访问武汉纺织大学主页</title></head></html><body><img src=’1.jpg’/><a href=’1.htm’>首页</a><a href=’2.htm’>教务处</a><a href=’3.htm’>数计学院</a><img src=’2.jpg’/><img src=’3.jpg’/></body></html>";
String weblineregex="<html><head><title>[\u4e00-\u9fa5]+</title></head></html>";
String webnameregex="[\u4e00-\u9fa5]+";
Pattern p=Pattern.compile(weblineregex);
Matcher m=p.matcher(web);
String webline="";
String webname="";
if(m.find()) webline=m.group();
p=Pattern.compile(webnameregex);
m=p.matcher(webline);
if(m.find()) webname=m.group();
System.out.println(webname);

String picnameregex="\\w+.jpg";
p=Pattern.compile(picnameregex);
m=p.matcher(web);
String picname[]=new String[10];
int i=0;
while(m.find()) {
picname[i]=m.group();
i++;
}
System.out.println("网页中共"+i+"张图片文件名为");
int x=0;
while(picname[x]!=null)
{
System.out.println(picname[x]);
x++;
}


String hyperlinklineregex="(<a href=’)\\d+(.htm’>)[\\u4e00-\\u9fa5]+</a>";
String hyperlinkaddressregex="\\d+.htm";
String hyperlinknanmeregex="[\\u4e00-\\u9fa5]+";
p=Pattern.compile(hyperlinklineregex);
m=p.matcher(web);
String hyperlinkline[]=new String[10];
i=0;
while(m.find()) {
hyperlinkline[i]=m.group();
i++;

}
System.out.println("网页中包含"+i+"个超链接，超链接信息如下：");
Pattern p1=Pattern.compile(hyperlinknanmeregex);
Matcher m1;
Pattern p2=Pattern.compile(hyperlinkaddressregex);
Matcher m2;
String hyperlinkname[]=new String[10];
String hyperlinkaddress[]=new String[10];
i=0;
while(hyperlinkline[i]!=null)
{
m1=p1.matcher(hyperlinkline[i]);
m2=p2.matcher(hyperlinkline[i]);
if(m1.find())
hyperlinkname[i]=m1.group();
if(m2.find())
hyperlinkaddress[i]=m2.group();
i++;
}
i=0;
while(hyperlinkline[i]!=null)
{
System.out.println(hyperlinkname[i]+" "+hyperlinkaddress[i]);
i++;
}
}
}

=====================================================
=====================================================

4.
package queshi;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Font {
public static void main(String[] args){
String web="<font face=’Arial Serif’ size=’10px’ color=’red’ />";
String lineregex="\\w+=’[a-z0-9\\s]+’";
String line[]=new String[10];
Pattern p=Pattern.compile(lineregex,Pattern.CASE_INSENSITIVE);
Matcher m=p.matcher(web);
int i=0;
while(m.find())
{
line[i]=m.group();
i++;
}
i=0;
while(line[i]!=null)
{
line[i]=line[i].replaceAll("’", "");
line[i]=line[i].replaceAll("=", ":");
i++;
}
i=0;
while(line[i]!=null)
{
System.out.println(line[i]);
i++;
}


}
}
